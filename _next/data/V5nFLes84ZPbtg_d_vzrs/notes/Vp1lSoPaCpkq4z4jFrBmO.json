{"pageProps":{"note":{"id":"Vp1lSoPaCpkq4z4jFrBmO","title":"YubiKey On Windows","desc":"Workarounds to use YubiKey on Windows","updated":1644134029033,"created":1644122484510,"custom":{},"fname":"tech.windows.yubikey","type":"note","vault":{"name":"main","fsPath":"main","useFMTitle":false},"contentHash":"8e025cc2e89a9987c0a59a9bcb18f518","links":[],"anchors":{"ssh":{"type":"header","text":"SSH","value":"ssh","line":12,"column":0,"depth":2},"alternative-solutions":{"type":"header","text":"Alternative Solutions","value":"alternative-solutions","line":55,"column":0,"depth":3},"wsl2":{"type":"header","text":"WSL2","value":"wsl2","line":59,"column":0,"depth":2},"references":{"type":"header","text":"References","value":"references","line":93,"column":0,"depth":2}},"children":[],"parent":"38504690-a37c-4b6d-b4fe-e075fc7dd096","data":{}},"body":"<p>Using a YubiKey in web browsers works great.</p>\n<p>Unfortunately, it is not so great when attempting to do so with SSH or within WSL2.</p>\n<h2 id=\"ssh\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#ssh\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>SSH</h2>\n<p><a href=\"https://buttondown.email/cryptography-dispatches/archive/cryptography-dispatches-openssh-82-just-works/\">OpenSSH 8.2 and above supports fido2</a>, which makes the process of using a Fido2 authenticator for SSH much simpler.</p>\n<p>However, the <a href=\"https://github.com/PowerShell/Win32-OpenSSH/issues/1804\">version of OpenSSH that ships with Windows 10 does not support fido2</a> at time of writing. This is something that is being actively worked on, although it will probably be several months before this is a fixed.</p>\n<p>Ironically, the easiest workaround for this is to use the version of ssh that comes with <a href=\"https://gitforwindows.org/\">Git For Windows</a>.</p>\n<ol>\n<li>\n<p>Install Git For Windows. These instructions assume that its in the default location of <code>C:\\Program Files\\Git</code>, adjust as needed.</p>\n</li>\n<li>\n<p>The version of ssh that comes with Git For Windows does support fido2. However, it isn't able to talk to the YubiKey or other compatible devices on Windows.</p>\n<p>This is where the <a href=\"https://github.com/tavrez/openssh-sk-winhello\">openssh-sk-winhello</a> middleware comes in. It allows ssh to connect with these authenticators via the Windows Hello API.</p>\n<p>Download the appropriate release of <code>winhello.dll</code> depending on the version of ssh in Git for Windows (v2.0 for my case).</p>\n</li>\n<li>\n<p>Copy <code>winhello.dll</code> to <code>C:\\Program Files\\Git\\usr\\lib\\ssh</code></p>\n</li>\n<li>\n<p>Add the following lines to <code>~/.ssh/config</code> (this will map back to <code>c:\\users\\&#x3C;username>\\.ssh\\config</code> on windows):</p>\n<pre><code>Host *\n    SecurityKeyProvider winhello.dll\n</code></pre>\n</li>\n<li>\n<p>Configure Bash to have ssh-keygen and ssh-agent use <code>winhello.dll</code>. Add this line to <code>~/.bashrc</code> (which will be in your user folder on windows):</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># this must be an absolute path, relative paths won't work</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">SSH_SK_PROVIDER</span><span class=\"token operator\">=</span>/usr/lib/ssh/winhello.dll\n</code></pre>\n<p><code>/usr/lib</code> from within git bash maps back to <code>C:\\Program Files\\Git\\usr\\lib</code> on windows.</p>\n</li>\n<li>\n<p>Launch git bash by typing \"git bash\" in the start menu to get to the shortcut.</p>\n</li>\n<li>\n<p>Generate a SSH keypair resident on the YubiKey:</p>\n<pre class=\"language-sh\"><code class=\"language-sh\">ssh-keygen -t ed25519-sk -O resident -C 'YubiKey 5C NFC' -f ~/.ssh/id_ed25519_sk\n</code></pre>\n<p>If everything is set up correctly, you should be prompted to enter the pin for the YubiKey and to touch the device.</p>\n</li>\n<li>\n<p>There should be 2 new files in your ssh folder. Copy the public key to a server you want to access. The private key is a stub that refers to the authenticator. From within git bash, try accessing a server via ssh with this new key.</p>\n</li>\n</ol>\n<h3 id=\"alternative-solutions\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#alternative-solutions\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Alternative Solutions</h3>\n<ul>\n<li><a href=\"https://github.com/mgbowen/windows-fido-bridge\">windows-fido-bridge</a> is another OpenSSH middleware that has similar functionality as winhelper. However, it requires ssh 8.3 and above, which doesn't come with Ubuntu 20.04.</li>\n</ul>\n<h2 id=\"wsl2\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#wsl2\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>WSL2</h2>\n<p>WSL2 has experimental support for USB devices, although it <a href=\"https://github.com/dorssel/usbipd-win/discussions/127\">doesn't work with Fido2 devices yet</a>.</p>\n<p>To work around this issue, <a href=\"https://github.com/tavrez/openssh-sk-winhello/blob/master/WSL.md\">openssh-sk-winhello can be set to accessed from WSL2</a> via ssh-sk-helper, which acts as a bridge from WSL2 to the ssh tools set up above in git bash.</p>\n<p>Git bash comes with ssh-sk-helper already, so that doesn't need to be installed separately.</p>\n<ol>\n<li>\n<p>In WSL2, add the following to <code>~/.ssh/config</code> (note the windows-style path):</p>\n<pre><code>Host *\n  SecurityKeyProvider \"c:/Program Files/Git/usr/lib/ssh/winhello.dll\"\n</code></pre>\n</li>\n<li>\n<p>Add the following environment variables to configure ssh in WSL2 to use ssh-sk-helper and winhello:</p>\n<pre class=\"language-sh\"><code class=\"language-sh\"># see https://github.com/tavrez/openssh-sk-winhello/blob/master/WSL.md\nexport SSH_SK_HELPER=\"/mnt/c/Program Files/Git/usr/lib/ssh/ssh-sk-helper.exe\"\nexport SSH_SK_PROVIDER=\"c:/Program Files/Git/usr/lib/ssh/winhello.dll\"\n</code></pre>\n</li>\n<li>\n<p>Copy the following .dll files from <code>C:\\Program Files\\Git\\usr\\bin</code> to <code>C:\\Program Files\\Git\\usr\\lib\\ssh</code> so that ssh-sk-helper has the DLLs it needs to run when invoked from WSL2:</p>\n<ul>\n<li>msys-2.0.dll</li>\n<li>msys-cbor-0.8.dll</li>\n<li>msys-crypto-1.1.dll</li>\n<li>msys-fido2-1.dll</li>\n<li>msys-gcc_s-seh-1.dll</li>\n<li>msys-z.dll</li>\n</ul>\n</li>\n<li>\n<p>If everything is set up correctly, you should be prompted to enter a pin and touch the device when generating an ssh keypair via the YubiKey.</p>\n</li>\n</ol>\n<h2 id=\"references\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#references\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>References</h2>\n<ul>\n<li><a href=\"https://github-wiki-see.page/m/mooltipass/minible/wiki/Setting-up-FIDO2-authentication-on-Linux-from-Windows\">Setting up FIDO2 authentication on Linux from Windows - mooltipass/minible Wiki</a></li>\n<li><a href=\"https://polansky.co/blog/a-better-windows-wsl-openssh-experience/\">A Better Windows 10+WSL SSH Experience</a></li>\n</ul>","noteIndex":{"id":"root","title":"root","desc":"","updated":1622102326440,"created":1595961348801,"stub":false,"custom":{"stub":false,"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"name":"main","fsPath":"main","useFMTitle":false},"contentHash":"2222728f026e86e75d06a6048c4f43ed","links":[],"anchors":{"personal-knowledge-base":{"type":"header","text":"Personal Knowledge Base","value":"personal-knowledge-base","line":9,"column":0,"depth":1}},"children":["9fa47ef8-a44b-4e36-929f-4aa7835b474d","6e43ea37-b3e7-44cf-aac7-31ae947d32a2","a10a1802-11d0-4557-a374-89712109cf90","0b9beaed-19ee-4124-a880-07e520da2b17","ddf3e9b2-ea12-4129-8785-06d6b82d4fcb","kuri625weqnoqf52yb6kr99","b4be93a8-69e3-4427-b4cd-53593c3ab387","5bbec2d1-4abe-4a2a-8bc5-5f3d4e229766","4a064a97-3d2d-4429-9a08-5b158dc7ef35","543e830d-feac-4048-8075-58c406bc1105","8875d2cf-85f8-41e8-b16d-c3707e40d74e","8ec37b11-59ad-4ea8-82d9-3186e7e0cd29","dOehc8Yap1zIbEqLvQvOt","b58269ed-9a0e-4213-b5b0-6d59c81d9899","b4fc6d48-17ae-4764-acdb-ec0f52707860","091b67bf-8bfa-454c-bbd3-7d84d8216229","f6fbee87-be27-471c-99bd-4af45d6a3156","fb9e4130-eaf8-425d-9039-5bc2ee876f18","4fb536a9-c146-4df3-8f30-9b2fb52a77f7","v5b801mxttirmxov2bd5rxj","aegmduey2jciizlti18foom","21ef758d-ca84-4be0-8eed-5e95ab3b4a7e","5fb5baa9-8b3d-4044-9c03-bbabfbdfe78a","2f6af89e-df82-4144-87fc-a2be66a0e657","POgyWcSIqi29tpqfP5uyS","lvjcnk2yvlwmhibccwtt1m1","b8uqjfgtvk1qcio41na03kh"],"parent":null,"data":{},"body":"\n# Personal Knowledge Base\n\nHi, and welcome to [Dickson Tan's](https://neurrone.com/pages/about/) personal knowledge base.\n\nThis is an experiment in note taking with the Zettelkasten method. This site is rendered with [Dendron](https://wiki.dendron.so/) which generates backlinks and an index, and provides other convenience features.\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"previewV2Enabled":false,"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{},"copyNoteLink":{}},"workspace":{"dendronVersion":"0.85.0","vaults":[{"fsPath":"human-dynamics","name":"Human Dynamics","useFMTitle":false},{"name":"govtech","fsPath":"govtech","visibility":"private","useFMTitle":false},{"name":"health","fsPath":"health","useFMTitle":false},{"name":"main","fsPath":"main","useFMTitle":false},{"name":"personal","fsPath":"personal","visibility":"private"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1},"disableTelemetry":true,"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"maxPreviewsCached":10,"maxNoteLength":204800,"enableUserTags":true,"enableHashTags":true,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"enableEditorDecorations":true},"preview":{"enableFMTitle":false,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":false,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"enableSiteLastModified":true,"siteRootDir":"docs","siteUrl":"https://kb.neurrone.com","enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"duplicateNoteBehavior":{"action":"useVault","payload":["main","health","Human Dynamics"]},"writeStubs":false,"seo":{"title":"Personal Knowledge Base","description":"Personal knowledge Base","author":"Dickson Tan","twitter":"neurrone"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enablePrettyLinks":true,"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}